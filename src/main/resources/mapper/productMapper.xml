<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="Product">
    <insert id="save" parameterType="product">
        insert into product_table(productName, productKind, productPrice, productCount, productDetail, productFileName)
        values (#{productName}, #{productKind}, #{productPrice}, #{productCount}, #{productDetail}, #{productFileName})
    </insert>
    <select id="pagingList" parameterType="java.util.HashMap" resultType="product">
        select * from product_table order by id desc limit #{start}, #{limit}
    </select>
    <select id="count" resultType="int">
        select count(id) from product_table
    </select>
    <select id="findById" parameterType="Long" resultType="product">
        select * from product_table where id=#{id}
    </select>
    <select id="find" parameterType="java.util.HashMap" resultType="product">
        select * from product_table where productKind=#{productKind} order by id desc limit #{start}, #{limit}
    </select>
    <select id="count1" parameterType="String" resultType="int">
        select count(id) from product_table where productKind=#{productKind}
    </select>
    <select id="search" parameterType="java.util.HashMap" resultType="product">
        select * from product_table where productName like concat('%', #{search}, '%') order by id desc limit #{start}, #{limit}
    </select>
    <select id="searchCount" parameterType="String" resultType="int">
        select count(id) from product_table where productName like concat('%', #{search}, '%')
    </select>
    <delete id="delete" parameterType="Long">
        delete from product_table where id=#{id}
    </delete>
    <update id="update" parameterType="product">
        update product_table set productName=#{productName}, productKind=#{productKind}, productPrice=#{productPrice}, productCount=#{productCount}, productDetail=#{productDetail}, productFileName=#{productFileName}
    </update>
</mapper>














